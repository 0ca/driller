diff -rup qemu-2.3.0/cpu-exec.c qemu-2.3.0-patched/cpu-exec.c
--- qemu-2.3.0/cpu-exec.c	2015-04-27 07:08:23.000000000 -0700
+++ qemu-2.3.0-patched/cpu-exec.c	2015-06-13 19:34:15.671594126 -0700
@@ -28,6 +28,10 @@
 #include "exec/memory-internal.h"
 #include "qemu/rcu.h"
 
+/* driller variables */
+int64_t driller_start_code, 
+        driller_end_code;
+
 /* -icount align implementation. */
 
 typedef struct SyncClocks {
@@ -493,8 +497,10 @@ int cpu_exec(CPUArchState *env)
                     tcg_ctx.tb_ctx.tb_invalidated_flag = 0;
                 }
                 if (qemu_loglevel_mask(CPU_LOG_EXEC)) {
-                    qemu_log("Trace %p [" TARGET_FMT_lx "] %s\n",
-                             tb->tc_ptr, tb->pc, lookup_symbol(tb->pc));
+                    /* driller modified trace */
+                    if (tb->pc >= driller_start_code && tb->pc <= driller_end_code)
+                        qemu_log("Trace %p [" TARGET_FMT_lx "] %s\n",
+                                 tb->tc_ptr, tb->pc, lookup_symbol(tb->pc));
                 }
                 /* see if we can patch the calling TB. When the TB
                    spans two pages, we cannot safely do a direct
diff -rup qemu-2.3.0/linux-user/elfload.c qemu-2.3.0-patched/linux-user/elfload.c
--- qemu-2.3.0/linux-user/elfload.c	2015-04-27 07:08:25.000000000 -0700
+++ qemu-2.3.0-patched/linux-user/elfload.c	2015-06-13 19:37:08.175594297 -0700
@@ -28,6 +28,8 @@
 
 #define ELF_OSABI   ELFOSABI_SYSV
 
+extern int64_t driller_start_code, driller_end_code;
+
 /* from personality.h */
 
 /*
@@ -1922,9 +1924,11 @@ static void load_elf_image(const char *i
             if (elf_prot & PROT_EXEC) {
                 if (vaddr < info->start_code) {
                     info->start_code = vaddr;
+                    if (!driller_start_code) driller_start_code = vaddr;
                 }
                 if (vaddr_ef > info->end_code) {
                     info->end_code = vaddr_ef;
+                    if (!driller_end_code) driller_end_code = vaddr_ef;
                 }
             }
             if (elf_prot & PROT_WRITE) {
